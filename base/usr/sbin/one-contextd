#!/bin/bash
#
# -------------------------------------------------------------------------- #
# Copyright 2010-2014, C12G Labs S.L.                                        #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

function export_rc_vars
{
    if [ -f $1 ] ; then
        ONE_VARS=`cat $1 | egrep -e '^[a-zA-Z\-\_0-9]*=' | sed 's/=.*$//'`

        . $1

        for v in $ONE_VARS; do
            export $v
        done
    fi
}

function execute_scripts {
    SCRIPTS_DIR="/etc/one-context.d"
    for script in $SCRIPTS_DIR/*; do
        "$script" "$1"
    done
}

function get_new_context {
    CONTEXT_DEV=`blkid -l -t LABEL="CONTEXT" -o device`
    if [ -e "$CONTEXT_DEV" ]; then
        mount -t iso9660 -L CONTEXT -o ro /mnt
        if [ -f /mnt/context.sh ]; then
            cp /mnt/context.sh /tmp/context.sh.new
        fi

        echo "umount /mnt" > /tmp/end_context
    elif curl -o /tmp/context.sh.new http://169.254.169.254/latest/user-data ; then
        echo -n ""
    elif type vmtoolsd ; then
        vmtoolsd --cmd 'info-get guestinfo.opennebula.context' | \
            openssl base64 -d > /tmp/context.sh.new
    fi
}

function check_context {
    if [ -s "/tmp/context.sh.new" ]; then
        diff /tmp/context.sh /tmp/context.sh.new && return 1
        return 0
    else
        return 1
    fi
}

function run_context {
    cp /tmp/context.sh.new /tmp/context.sh

    export_rc_vars /tmp/context.sh
    execute_scripts "$1"
}

function end_context {
    if [ -e "/tmp/end_context" ]; then
        sh "/tmp/end_context"
        rm "/tmp/end_context"
    fi
    [ -e "/tmp/context.sh.new" ] && rm "/tmp/context.sh.new"
}

COMMAND="$1"

get_new_context
check_context && run_context "$COMMAND"
end_context

